TODO
- Tracing
- devops
- Reactive web/kafka


------------------------------------------------
Spring Integration
------------------------------------------------

- MessageChannel        send(Message)
- SubscribableChannel   subscribe(MessageHandler), unsubscribe(MessageHandler)
- PollableChannel       Message<?> receive()
- MessageHandler        handleMessage(Message<?>)

- MessageSource<T>      Message<T> receive()
- MessageSelector       boolean accept(Message)
- MessageProducer       setOutputChannel

- @Transformer          1->1
- @Splitter             1->n
- @Aggregator           n->1
- @Service activator    1->void
- @Router               in->contitional out
- @Filter               1->boolean

------------------------------------------------
Cloud Stream
------------------------------------------------
Bindable Channels (MessageSource...)
- Source    OUTPUT (MessageChannel)
- Processor INPUT,OUTPUT (extends Source, Sink)
- Sink      INPUT (SubscribableChannel)


------------------------------------------------
Spring Cloud Data Flow
------------------------------------------------
create data pipelines in two flavors:
- Long-lived real-time stream applications using Spring Cloud Stream
- Short-lived batched task applications using Spring Cloud Task

------------------------------------------------
Kafka Serializer/Deserializer
------------------------------------------------
                        (defaults)
key.serializer          ByteArraySerializer
value.serializer        ByteArraySerializer
key.deserializer        ByteArrayDeserializer
value.deserializer      ByteArrayDeserializer

- printed out at startup

------------------------------------------------
Cloudsrtream Properties
------------------------------------------------
- independent from Kafka/Rabbit

- https://docs.spring.io/spring-cloud-stream/docs/Brooklyn.RELEASE/reference/html/_configuration_options.html

# top level properties
spring.cloud.stream.<key>: <value>
- instanceCount
- ...

# binding properties
spring.cloud.stream.bindings.<channelName>.<key>: <value>
- destination
- group
- contentType
- ...

- set for all channels
spring.cloud.stream.default.<key>: <value>

# consumer properties
spring.cloud.stream.bindings.<channelName>.consumer.<key>: <value>
- concurrency
- partitioned
- ...

# producer properties
spring.cloud.stream.bindings.<channelName>.producer.<key>: <value>
- partitionKeyExpression
- partitionKeyExtractorClass
- partitionSelectorExpression
- ...
